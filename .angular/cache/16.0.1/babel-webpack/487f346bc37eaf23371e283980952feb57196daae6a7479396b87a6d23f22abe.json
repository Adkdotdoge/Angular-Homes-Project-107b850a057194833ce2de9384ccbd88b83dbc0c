{"ast":null,"code":"import _asyncToGenerator from \"/Users/adamkizis/github/Angular-Homes-Project-107b850a057194833ce2de9384ccbd88b83dbc0c/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { environment } from '../app/environments/environment';\nimport * as i0 from \"@angular/core\";\nclass HousingService {\n  constructor() {\n    this.url = environment.apiUrl;\n  }\n  getAllHousingLocations() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const response = yield fetch(_this.url); // url = 'http://localhost:3000/locations'\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const jsonData = yield response.json();\n        // ✅ Directly return the array\n        return jsonData ?? [];\n      } catch (error) {\n        console.error(\"Error fetching housing locations:\", error);\n        return [];\n      }\n    })();\n  }\n  getHousingLocationById(id) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      try {\n        const response = yield fetch(_this2.url);\n        if (!response.ok) {\n          throw new Error(`HTTP error! Status: ${response.status}`);\n        }\n        const jsonData = yield response.json();\n        // ✅ Find and return the specific location by ID\n        return jsonData.houses[0].locations.find(location => location.id === id);\n      } catch (error) {\n        console.error(\"Error fetching housing location by ID:\", error);\n        return undefined;\n      }\n    })();\n  }\n  submitApplication(firstName, lastName, email) {\n    console.log(`Application submitted: ${firstName} ${lastName}, Email: ${email}`);\n  }\n}\nHousingService.ɵfac = function HousingService_Factory(t) {\n  return new (t || HousingService)();\n};\nHousingService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: HousingService,\n  factory: HousingService.ɵfac,\n  providedIn: 'root'\n});\nexport { HousingService };","map":{"version":3,"mappings":";AAEA,SAASA,WAAW,QAAQ,iCAAiC;;AAE7D,MAGaC,cAAc;EAGzBC,YAAA;IAFQ,KAAAC,GAAG,GAAGH,WAAW,CAACI,MAAM;EAEhB;EAEVC,sBAAsBA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MAC1B,IAAI;QACF,MAAMC,QAAQ,SAASC,KAAK,CAACH,KAAI,CAACH,GAAG,CAAC,CAAC,CAAC;QAExC,IAAI,CAACK,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;;QAG3D,MAAMC,QAAQ,SAASL,QAAQ,CAACM,IAAI,EAAE;QAEtC;QACA,OAAOD,QAAQ,IAAI,EAAE;OAEtB,CAAC,OAAOE,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC;QACzD,OAAO,EAAE;;IACV;EACH;EAGME,sBAAsBA,CAACC,EAAU;IAAA,IAAAC,MAAA;IAAA,OAAAZ,iBAAA;MACrC,IAAI;QACF,MAAMC,QAAQ,SAASC,KAAK,CAACU,MAAI,CAAChB,GAAG,CAAC;QAEtC,IAAI,CAACK,QAAQ,CAACE,EAAE,EAAE;UAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;;QAG3D,MAAMC,QAAQ,SAASL,QAAQ,CAACM,IAAI,EAAE;QAEtC;QACA,OAAOD,QAAQ,CAACO,MAAM,CAAC,CAAC,CAAC,CAACC,SAAS,CAACC,IAAI,CAAEC,QAAyB,IAAKA,QAAQ,CAACL,EAAE,KAAKA,EAAE,CAAC;OAE5F,CAAC,OAAOH,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wCAAwC,EAAEA,KAAK,CAAC;QAC9D,OAAOS,SAAS;;IACjB;EACH;EAEAC,iBAAiBA,CAACC,SAAiB,EAAEC,QAAgB,EAAEC,KAAa;IAClEZ,OAAO,CAACa,GAAG,CAAC,0BAA0BH,SAAS,IAAIC,QAAQ,YAAYC,KAAK,EAAE,CAAC;EACjF;;AA9CW3B,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAA6B,OAAA,EAAd7B,cAAc,CAAA8B,IAAA;EAAAC,UAAA,EAFb;AAAM;SAEP/B,cAAc","names":["environment","HousingService","constructor","url","apiUrl","getAllHousingLocations","_this","_asyncToGenerator","response","fetch","ok","Error","status","jsonData","json","error","console","getHousingLocationById","id","_this2","houses","locations","find","location","undefined","submitApplication","firstName","lastName","email","log","factory","ɵfac","providedIn"],"sourceRoot":"","sources":["/Users/adamkizis/github/Angular-Homes-Project-107b850a057194833ce2de9384ccbd88b83dbc0c/src/app/housing.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HousingLocation } from './housing-location';\nimport { environment } from '../app/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HousingService {\n  private url = environment.apiUrl;\n\n  constructor() { }\n\n  async getAllHousingLocations(): Promise<HousingLocation[]> {\n    try {\n      const response = await fetch(this.url); // url = 'http://localhost:3000/locations'\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n  \n      const jsonData = await response.json();\n  \n      // ✅ Directly return the array\n      return jsonData ?? [];\n  \n    } catch (error) {\n      console.error(\"Error fetching housing locations:\", error);\n      return [];\n    }\n  }\n  \n\n  async getHousingLocationById(id: number): Promise<HousingLocation | undefined> {\n    try {\n      const response = await fetch(this.url);\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! Status: ${response.status}`);\n      }\n\n      const jsonData = await response.json();\n\n      // ✅ Find and return the specific location by ID\n      return jsonData.houses[0].locations.find((location: HousingLocation) => location.id === id);\n      \n    } catch (error) {\n      console.error(\"Error fetching housing location by ID:\", error);\n      return undefined;\n    }\n  }\n\n  submitApplication(firstName: string, lastName: string, email: string): void {\n    console.log(`Application submitted: ${firstName} ${lastName}, Email: ${email}`);\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}